beliefbase.cbeliefbase.empty                                                      = storage need not to be empty
beliefbase.cmask.beliefbaseempty                                                  = beliefbase need not to be empty
beliefbase.cmask.empty                                                            = name need not to be empty
beliefbase.cmask.equal                                                            = storages {0} are equal to {1}
beliefbase.cmask.notfound                                                         = path element {0} in {1} not found
common.ccommon.argumentsnoteven                                                   = number of arguments are not even
common.cpath.createpath                                                           = two parameters must be set at least
common.cpath.pathempty                                                            = path is empty
common.cpath.separatornotempty                                                    = separator must not be empty
grammar.cagentvisitor.beliefaction                                                = belief action is unknown
grammar.cagentvisitor.belieftrigger                                               = belief trigger [{0}] is unkown
grammar.cagentvisitor.goaltrigger                                                 = goal trigger [{0}] is unknown
grammar.cagentvisitor.termunknown                                                 = term [{0}] is unknown
language.plan.expression.arithmetic.cexpression.argumentnumbertosmall             = operator [{0}] need [{1}] arguments, but the expression stack holds only [{2}] arguments
language.plan.expression.arithmetic.cexpression.cnumberelement.numbernotnull      = number need not to be null
language.plan.expression.arithmetic.cexpression.cnumberelement.variablenotresolve = number for variable [{0}] cannot be resolved
language.plan.expression.arithmetic.cexpression.notevaluated                      = expression cannot be evaluated
language.plan.expression.arithmetic.cexpression.operatornotfound                  = operator [{0}] not found
language.plan.expression.arithmetic.operator.cdivide.notdefined                   = operation [{0}] is not defined on [{1}] and [{2}]
language.plan.expression.arithmetic.operator.cminus.notdefined                    = operation [{0}] is not defined on [{1}] and [{2}]
language.plan.expression.arithmetic.operator.cmultiply.notdefined                 = operation [{0}] is not defined on [{1}] and [{2}]
language.plan.expression.arithmetic.operator.cplus.notdefined                     = operation [{0}] is not defined on [{1}] and [{2}]
language.plan.unaryoperator.cdecrement.notallocated                               = variable [{0}] is not allocated
language.plan.unaryoperator.cincrement.notallocated                               = variable [{0}] is not allocated
